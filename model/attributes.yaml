groups:
  - id: registry.policy
    type: attribute_group
    display_name: Policy Engine Attributes
    brief: >
      Attributes emitted by policy engines (OPA, Gatekeeper, etc.) during policy evaluation and enforcement.
      Maps to GEMARA Layer 4 (Evaluation) and Layer 5 (Enforcement) for Policy-as-Code workflows.
    attributes:
      - id: policy.engine.name
        type: string
        stability: development
        brief: >
          Name of the policy engine that performed the evaluation or enforcement action.
        examples: [ "OPA", "Gatekeeper", "Conftest", "Sentinel" ]
        requirement_level: required
      - id: policy.engine.version
        type: string
        stability: development
        brief: >
          Version of the policy engine.
        examples: [ "v3.14.0", "v0.45.0", "v1.2.3", "v2.0.1" ]
        requirement_level: recommended
      - id: policy.rule.id
        type: string
        stability: development
        brief: >
          Unique identifier for the policy rule being evaluated or enforced.
        examples: [ "deny-root-user", "require-encryption", "check-labels" ]
        requirement_level: required
      - id: policy.rule.name
        type: string
        stability: development
        brief: >
          Human-readable name of the policy rule.
        examples: [ "Deny Root User", "Require Encryption", "Check Resource Labels" ]
        requirement_level: opt_in
      - id: policy.uri
        type: string
        stability: development
        brief: >
          Source control URL and version of the policy-as-code file for auditability.
        examples:
          ["github.com/org/policy-repo/b8a7c2e", "gitlab.com/company/policies@v1.2.3"]
        requirement_level: recommended
      - id: policy.evaluation.status
        type: string
        stability: development
        brief: >
          Result of the policy evaluation: Not Run, Passed, Failed, Needs Review, Not Applicable, or Unknown.
        examples: [ "Not Run", "Passed", "Failed", "Needs Review", "Not Applicable", "Unknown" ]
        requirement_level: required
      - id: policy.status.message
        type: string
        stability: development
        brief: >
          Additional context about the policy evaluation result.
        requirement_level: opt_in
        examples: ["The policy evaluation failed due to a missing attribute."]
      - id: policy.enforcement.action
        type: string
        stability: development
        brief: >
          Action taken by the policy engine: Block, Allow, Remediate, Waive, Notify, or Unknown.
        examples: [ "Block", "Allow", "Remediate", "Waive", "Notify", "Unknown" ]
        requirement_level: opt_in
      - id: policy.enforcement.status
        type: string
        stability: development
        brief: >
          Result of the policy enforcement action: Block, Allow, Remediate, Waive, Notify, or Unknown.
        examples: [ "Block", "Allow", "Remediate", "Waive", "Notify", "Unknown" ]
        requirement_level: opt_in
      - id: policy.target.id
        type: string
        stability: development
        brief: >
          Unique identifier for the resource or entity being evaluated or enforced against.
        examples: [ "deployment-123", "resource-456", "user-789" ]
        requirement_level: opt_in
      - id: policy.target.name
        type: string
        stability: development
        brief: >
          Human-readable name of the resource or entity being evaluated or enforced against.
        examples: [ "frontend-deployment", "s3-bucket-secrets", "admin-user" ]
        requirement_level: opt_in
      - id: policy.target.type
        type: string
        stability: development
        brief: >
          Type of the resource or entity being evaluated or enforced against.
        examples: [ "deployment", "resource", "user", "configuration" ]
        requirement_level: opt_in
      - id: policy.target.environment
        type: string
        stability: development
        brief: >
          Environment where the target resource or entity exists.
        examples: [ "production", "staging", "development" ]
        requirement_level: opt_in
      - id: policy.exception.id
        type: string
        stability: development
        brief: >
          Unique identifier for the approved policy exception, if applicable.
        examples: [ "EX-2025-10-001", "WAIVE-AC-1-001" ]
        requirement_level: opt_in
      - id: policy.exception.approved
        type: boolean
        stability: development
        brief: >
          Whether the policy exception was approved for this evaluation or enforcement.
        examples: [ true, false ]
        requirement_level: opt_in

  - id: registry.compliance
    type: attribute_group
    display_name: Compliance Assessment Attributes
    brief: >
      Attributes added by compliance assessment tools to map policy results to regulatory frameworks.
      Provides compliance context, risk assessment, and regulatory mapping for audit and reporting.
    attributes:
      - id: compliance.control.id
        type: string
        stability: development
        brief: >
          Unique identifier for the security control being assessed.
        examples:
          [ "OSPS-QA-07.01" ]
        requirement_level: required
      - id: compliance.control.category
        type: string
        stability: development
        brief: >
          Category or family that the security control belongs to.
        examples:
          [
            "Access Control",
            "Quality",
          ]
        requirement_level: recommended
      - id: compliance.control.catalog.id
        type: string
        stability: development
        brief: >
          Unique identifier for the security control catalog or framework.
        examples:
          [
            "OSPS-B",
            "CCC",
          ]
        requirement_level: required
      - id: compliance.control.applicability
        type: string[]
        stability: development
        brief: >
          Environments or contexts where this control applies.
        examples: [ [ "Production", "Staging" ], [ "All Environments" ], [ "Kubernetes", "AWS" ] ]
        requirement_level: opt_in
      - id: compliance.control.remediation.description
        type: string
        stability: development
        brief: >
          Description of the recommended remediation strategy for this control.
        examples:
          [
            "This is a short description of the remediation strategy for this control.",
          ]
        requirement_level: opt_in
      - id: compliance.frameworks
        type: string[]
        stability: development
        brief: >
          Regulatory or industry standards being evaluated for compliance.
        examples: [ [ "NIST-800-53", "ISO-27001" ], [ "SOC-2" ], [ "CIS-CSC", "NIST-800-53" ] ]
        requirement_level: recommended
      - id: compliance.requirements
        type: string[]
        stability: development
        brief: >
          Compliance requirement identifiers from the frameworks being evaluated.
        examples: [ [ "AC-1", "A.9.1.1" ], [ "CC6.1" ], [ "CIS-1.1", "AC-2" ] ]
        requirement_level: recommended
      - id: compliance.status
        type: string
        stability: development
        brief: >
          Compliance verdict: COMPLIANT, NON_COMPLIANT, EXEMPT, NOT_APPLICABLE, or UNKNOWN.
        examples: [ "COMPLIANT", "NON_COMPLIANT", "EXEMPT", "NOT_APPLICABLE", "UNKNOWN" ]
        requirement_level: required
      - id: compliance.risk.level
        type: string
        stability: development
        brief: >
          Risk level associated with non-compliance: Critical, High, Medium, Low, or Informational.
        examples: [ "Critical", "High", "Medium", "Low", "Informational" ]
        requirement_level: opt_in